/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.47
 * Generated at: 2018-12-18 16:19:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.manage.qy;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class basCostConfigIndex_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(9);
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.3.20.RELEASE.jar", Long.valueOf(1541076044000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1528799796000L));
    _jspx_dependants.put("jar:file:/opt/www/webserver/wbm-bi-admin/WEB-INF/lib/jstl-1.2.jar!/META-INF/c-1_0-rt.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/opt/www/webserver/wbm-bi-admin/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/opt/www/webserver/wbm-bi-admin/WEB-INF/lib/spring-webmvc-4.3.20.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1539563356000L));
    _jspx_dependants.put("jar:file:/opt/www/webserver/wbm-bi-admin/WEB-INF/lib/spring-webmvc-4.3.20.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1539563356000L));
    _jspx_dependants.put("jar:file:/opt/www/webserver/wbm-bi-admin/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/shiro-web-1.3.2.jar", Long.valueOf(1528799788000L));
    _jspx_dependants.put("jar:file:/opt/www/webserver/wbm-bi-admin/WEB-INF/lib/shiro-web-1.3.2.jar!/META-INF/shiro.tld", Long.valueOf(1473414826000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("<!DOCTYPE HTML>\n");
      out.write("<html lang=\"zh-cn\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("    <title>特殊项目管理</title>\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/inc/head.jsp", out, true);
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<p align=\"center\" class=\"lead\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\n");
      out.write("<div id=\"main\">\n");
      out.write("    <div id=\"toolbar\">\n");
      out.write("        <form name=\"form\" method=\"post\" style=\"margin-left: 15px;margin-top: 5px;\">\n");
      out.write("        <div>\n");
      out.write("            <input id='date' type='text' name=\"date\" class=\"input-small form-control\" placeholder=\"查询年月\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${date}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" autocomplete=\"off\" style=\"float: left;width: 80px\"/>\n");
      out.write("            <input id='pdId' type='text' name=\"pdId\" class=\"input-medium\" placeholder=\"请输入明细号\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pdId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" style=\"float: left;margin-left: 10px;\"/>\n");
      out.write("            <input id='dcPrjId' type='text' name=\"dcPrjId\" class=\"input-medium\" placeholder=\"请输入项目号\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dcPrjId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" style=\"float: left;margin-left: 10px;width: 125px\"/>\n");
      out.write("            <button id=\"search\" class=\"btn btn-primary\" type=\"button\" onclick=\"_search();\" style=\"margin-left: 10px;\">查询</button>\n");
      out.write("            <a class=\"btn btn-warning\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/qy/basCostConfig/create\" style=\"margin-left: 5px;\">新增</a>\n");
      out.write("            <a id=\"batchDel\" class=\"btn btn-danger\" onclick=\"deleteAction()\" style=\"margin-left: 5px;\">批量删除</a>\n");
      out.write("        </div>\n");
      out.write("        </form>\n");
      out.write("        ");
      out.write("\n");
      out.write("        ");
      out.write("\n");
      out.write("        ");
      out.write("\n");
      out.write("        ");
      out.write("\n");
      out.write("        ");
      out.write("\n");
      out.write("        ");
      out.write("\n");
      out.write("    </div>\n");
      out.write("    <table id=\"table\"></table>\n");
      out.write("</div>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/inc/footer.jsp", out, true);
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    var $table = $(\"#table\");\n");
      out.write("    function _search() {\n");
      out.write("        $table.bootstrapTable('refresh');\n");
      out.write("    }\n");
      out.write("    //搜索按钮绑定回车事件\n");
      out.write("    document.onkeydown = function(event){\n");
      out.write("        if (event.keyCode == 13) {\n");
      out.write("            event.cancelBubble = true;\n");
      out.write("            event.returnValue = false;\n");
      out.write("            _search();\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    $table.bootstrapTable({\n");
      out.write("        url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/qy/basCostConfig/list',\n");
      out.write("        height: getHeight(),\n");
      out.write("        striped: true,\n");
      out.write("        minimumCountColumns: 2,\n");
      out.write("        queryParams: function (params) {\n");
      out.write("            return {\n");
      out.write("                order: params.order,\n");
      out.write("                sort : params.sort,\n");
      out.write("                offset : params.offset,\n");
      out.write("                limit : params.limit,\n");
      out.write("                date : $('#date').val(),\n");
      out.write("                pdId : $('#pdId').val(),\n");
      out.write("                dcPrjId : $('#dcPrjId').val(),\n");
      out.write("            };\n");
      out.write("        },\n");
      out.write("        contentType : \"application/x-www-form-urlencoded\",\n");
      out.write("        clickToSelect: true,\n");
      out.write("        detailView: false,\n");
      out.write("        detailFormatter: 'detailFormatter',\n");
      out.write("        pagination: true,\n");
      out.write("        paginationLoop: false,\n");
      out.write("        sidePagination: 'server',\n");
      out.write("        silentSort: false,\n");
      out.write("        smartDisplay: false,\n");
      out.write("        escape: true,\n");
      out.write("        searchOnEnterKey: true,\n");
      out.write("        idField: 'id',\n");
      out.write("        maintainSelected: true,\n");
      out.write("        toolbar: '#toolbar',\n");
      out.write("        columns: [\n");
      out.write("            {field: 'ck', checkbox: true,\n");
      out.write("                 formatter:function (value,row,index) {\n");
      out.write("                    var moth = row['calcYf'];\n");
      out.write("                    var now = new Date().Format(\"yyyyMM\");\n");
      out.write("                    if(row['status'] == '2' && moth >= now)\n");
      out.write("                        return {disabled : false};\n");
      out.write("                    else\n");
      out.write("                        return {disabled : true};\n");
      out.write("                }\n");
      out.write("            },\n");
      out.write("            { field:'calcYf', title:'计算月份'},\n");
      out.write("            { field:'pdId', title:'明细标识'},\n");
      out.write("//                { field:'orderId', title:'订单编号'},\n");
      out.write("            { field:'dcPrjId', title:'项目编号'},\n");
      out.write("            { field:'dcPrjName', title:'项目名称'},\n");
      out.write("//                { field:'costClassName', title:'人工成本分类'},\n");
      out.write("            { field:'finalMancost', title:'核定人工成本'},\n");
      out.write("            { field:'finalPmmancost', title:'核定项目管理<br>人工成本'},\n");
      out.write("//                { field:'finalBackmancost', title:'核定备件人工成本'},\n");
      out.write("//                { field:'finalSubmancost', title:'核定渠道管理人工成本'},\n");
      out.write("//                { field:'finalSvctoolcost', title:'核定服务工具成本'},\n");
      out.write("//                { field:'finalSvcdeskcost', title:'核定服务台成本'},\n");
      out.write("            { field:'finalRiskabilitycost', title:'核定风险及<br>能力成本'},\n");
      out.write("//                { field:'finalDeviation', title:'核定系统误差'},\n");
      out.write("            { field:'finalUrgecost', title:'核定人工激励<br>成本'},\n");
      out.write("//                { field:'finalPmurgecost', title:'核定项目管理激励成本'},\n");
      out.write("//                { field:'finalBackurgecost', title:'核定备件人工激励成本'},\n");
      out.write("            { field:'finalSuburgecost', title:'核定渠道管理<br>激励成本'},\n");
      out.write("//                { field:'finalBackcost', title:'核定备件备件成本'},\n");
      out.write("            { field:'finalSubcost', title:'核定分包成本'},\n");
      out.write("//                { field:'finalProfit', title:'核定产品部利润'},\n");
      out.write("//                { field:'finalTraincost', title:'核定内部培训成本'},\n");
      out.write("//                { field:'finalCarrycost', title:'核定搬运费'},\n");
      out.write("            { field:'finalHostcost', title:'核定托管成本'},\n");
      out.write("            { field:'finalManurgecost', title:'核定人工<br>-激励成本'},\n");
      out.write("            { field:'finalHostmancost', title:'核定托管<br>-管理成本'},\n");
      out.write("            { field:'finalSubriskcost', title:'核定托管<br>-风险成本'},\n");
      out.write("//                { field:'finalPtoscost', title:'核定差旅/住宿费'},\n");
      out.write("//                { field:'finalPpmtcost', title:'核定项目会议费'},\n");
      out.write("//                { field:'finalOthercost', title:'核定其他工程成本'},\n");
      out.write("//                { field:'finalPurchaseCost', title:'核定采购成本'},\n");
      out.write("            /*{ field:'createDate', title:'创建时间',\n");
      out.write("             formatter: function (value, row, index) {\n");
      out.write("             if (value == null) {\n");
      out.write("             return \"\";\n");
      out.write("             }\n");
      out.write("             var offlineTimeStr = new Date(value).Format(\"yyyy-MM-dd\");\n");
      out.write("             return offlineTimeStr;\n");
      out.write("             }\n");
      out.write("             },\n");
      out.write("             { field:'payDate', title:'支付日期',\n");
      out.write("             formatter: function (value, row, index) {\n");
      out.write("             if (value == null) {\n");
      out.write("             return \"\";\n");
      out.write("             }\n");
      out.write("             var offlineTimeStr = new Date(value).Format(\"yyyy-MM-dd\");\n");
      out.write("             return offlineTimeStr;\n");
      out.write("             }\n");
      out.write("             },\n");
      out.write("             { field:'status', title:'状态'},\n");
      out.write("             { field:'preStatus', title:'前一状态'},\n");
      out.write("             { field:'statusChangeDate', title:'状态变更时间',\n");
      out.write("             formatter: function (value, row, index) {\n");
      out.write("             if (value == null) {\n");
      out.write("             return \"\";\n");
      out.write("             }\n");
      out.write("             var offlineTimeStr = new Date(value).Format(\"yyyy-MM-dd\");\n");
      out.write("             return offlineTimeStr;\n");
      out.write("             }\n");
      out.write("             },*/\n");
      out.write("//            { field:'status', title:'状态',visible:false},\n");
      out.write("            {field: 'action', title: '操作', align: 'center', events: 'actionEvents', clickToSelect: false, width:'6%',\n");
      out.write("                formatter:function (value,row,index) {\n");
      out.write("                    var moth = row['calcYf'];\n");
      out.write("                    var now = new Date().Format(\"yyyyMM\");\n");
      out.write("                    if(row['status'] == '2' && moth >= now)\n");
      out.write("                        return [\n");
      out.write("                            ");
      out.write("\n");
      out.write("                            '<a class=\"update\" href=\"javascript:;\" onclick=\"updateAction(\\'' + row.id + '\\')\" data-toggle=\"tooltip\" title=\"编辑\" style=\"display: inline\"><i class=\"glyphicon glyphicon-edit\"></i></a>　',\n");
      out.write("                            '<a class=\"delete\" href=\"javascript:;\" onclick=\"deleteAction(\\'' + row.id + '\\')\" data-toggle=\"tooltip\" title=\"删除\" style=\"display: inline\"><i class=\"glyphicon glyphicon-remove\"></i></a>'\n");
      out.write("                        ].join('');\n");
      out.write("                    else\n");
      out.write("                        return '<span style=\"color: #2a6496;\">不可操作</span>';\n");
      out.write("                }\n");
      out.write("            }]\n");
      out.write("    });//, formatter: 'actionFormatter'\n");
      out.write("    // 格式化操作按钮\n");
      out.write("    /*function actionFormatter(value, row, index) {\n");
      out.write("        return [\n");
      out.write("            '<a class=\"look\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/qy/basCostConfig/copy/' + row.id + '\" data-toggle=\"tooltip\" title=\"复制新增\" style=\"display: inline\"><i class=\"glyphicon glyphicon-plus-sign\"></i></a>　',\n");
      out.write("            '<a class=\"update\" href=\"javascript:;\" onclick=\"updateAction(\\'' + row.id + '\\')\" data-toggle=\"tooltip\" title=\"编辑\" style=\"display: inline\"><i class=\"glyphicon glyphicon-edit\"></i></a>　',\n");
      out.write("            '<a class=\"delete\" href=\"javascript:;\" onclick=\"deleteAction(\\'' + row.id + '\\')\" data-toggle=\"tooltip\" title=\"删除\" style=\"display: inline\"><i class=\"glyphicon glyphicon-remove\"></i></a>'\n");
      out.write("        ].join('');\n");
      out.write("    };*/\n");
      out.write("    // 格式化图标\n");
      out.write("    function iconFormatter(value, row, index) {\n");
      out.write("        return '<i class=\"' + value + '\"></i>';\n");
      out.write("    }\n");
      out.write("    // 格式化类型\n");
      out.write("    function typeFormatter(value, row, index) {\n");
      out.write("        if (value == 1) {\n");
      out.write("            return '<span class=\"label label-primary\">普通</span>';\n");
      out.write("        }\n");
      out.write("        if (value == 2) {\n");
      out.write("            return '<span class=\"label label-danger\">热门</span>';\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    // 新增\n");
      out.write("    var createDialog;\n");
      out.write("    function createAction() {\n");
      out.write("        createDialog = $.dialog({\n");
      out.write("            animationSpeed: 300, \n");
      out.write("            title: '新增特殊项目',\n");
      out.write("            content: 'url:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/qy/basCostConfig/create',\n");
      out.write("         onContentReady: function () {\n");
      out.write("                initMaterialInput();\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("    // 编辑\n");
      out.write("    var updateDialog;\n");
      out.write("    function updateAction(id) {\n");
      out.write("        if(!id){\n");
      out.write("            var rows = $table.bootstrapTable('getSelections');\n");
      out.write("            if (rows.length != 1) {\n");
      out.write("                $.confirm({\n");
      out.write("                    title: false,\n");
      out.write("                    content: '请选择一条记录！',\n");
      out.write("                    autoClose: 'cancel|3000',\n");
      out.write("                    backgroundDismiss: true,\n");
      out.write("                    buttons: {\n");
      out.write("                        cancel: {\n");
      out.write("                            text: '取消',\n");
      out.write("                            btnClass: 'waves-effect waves-button'\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            } else {\n");
      out.write("                updateDialog = $.dialog({\n");
      out.write("                    animationSpeed: 300, \n");
      out.write("                    title: '编辑特殊项目',\n");
      out.write("                    content: 'url:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/qy/basCostConfig/update/' + rows[0].id,\n");
      out.write("                 onContentReady: function () {\n");
      out.write("                        initMaterialInput();\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("        } else {\n");
      out.write("            updateDialog = $.dialog({\n");
      out.write("                animationSpeed: 300, \n");
      out.write("                title: '编辑特殊项目',\n");
      out.write("                content: 'url:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/qy/basCostConfig/update/' + id,\n");
      out.write("             onContentReady: function () {\n");
      out.write("                    initMaterialInput();\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    // 查看\n");
      out.write("    var copyDialog;\n");
      out.write("    function copyAction(id) {\n");
      out.write("        if(!id){\n");
      out.write("            var rows = $table.bootstrapTable('getSelections');\n");
      out.write("            if (rows.length != 1) {\n");
      out.write("                $.confirm({\n");
      out.write("                    title: false,\n");
      out.write("                    content: '请选择一条记录！',\n");
      out.write("                    autoClose: 'cancel|3000',\n");
      out.write("                    backgroundDismiss: true,\n");
      out.write("                    buttons: {\n");
      out.write("                        cancel: {\n");
      out.write("                            text: '取消',\n");
      out.write("                            btnClass: 'waves-effect waves-button'\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            } else {\n");
      out.write("                copyDialog = $.dialog({\n");
      out.write("                    animationSpeed: 300, \n");
      out.write("                    title: '查看特殊项目',\n");
      out.write("                    content: 'url:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/qy/basCostConfig/copy/' + rows[0].id,\n");
      out.write("                 onContentReady: function () {\n");
      out.write("                        initMaterialInput();\n");
      out.write("                        initUploader();\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("        } else {\n");
      out.write("            copyDialog = $.dialog({\n");
      out.write("                animationSpeed: 300, \n");
      out.write("                title: '查看特殊项目',\n");
      out.write("                content: 'url:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/qy/basCostConfig/copy/' + id,\n");
      out.write("             onContentReady: function () {\n");
      out.write("                    initMaterialInput();\n");
      out.write("                    initUploader();\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    // 导出\n");
      out.write("    var exportDialog;\n");
      out.write("    function exportAction() {\n");
      out.write("        exportDialog = $.dialog({\n");
      out.write("            animationSpeed: 300,\n");
      out.write("            title: '导出特殊项目',\n");
      out.write("            content: 'url:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/qy/basCostConfig/export',\n");
      out.write("            onContentReady: function () {\n");
      out.write("                initMaterialInput();\n");
      out.write("                $('select').select2();\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("    // 导入\n");
      out.write("    var importDialog;\n");
      out.write("    function importAction() {\n");
      out.write("        importDialog = $.dialog({\n");
      out.write("            animationSpeed: 300,\n");
      out.write("            title: '导入特殊项目',\n");
      out.write("            content: 'url:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/qy/basCostConfig/import',\n");
      out.write("         onContentReady: function () {\n");
      out.write("                initMaterialInput();\n");
      out.write("                $('select').select2();\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("    // 删除\n");
      out.write("    var deleteDialog;\n");
      out.write("    function deleteAction(id) {\n");
      out.write("        if(!id){\n");
      out.write("            var rows = $table.bootstrapTable('getSelections');\n");
      out.write("            if (rows.length == 0) {\n");
      out.write("                $.confirm({\n");
      out.write("                    title: false,\n");
      out.write("                    content: '请至少选择一条记录！',\n");
      out.write("                    autoClose: 'cancel|3000',\n");
      out.write("                    backgroundDismiss: true,\n");
      out.write("                    buttons: {\n");
      out.write("                        cancel: {\n");
      out.write("                            text: '取消',\n");
      out.write("                            btnClass: 'waves-effect waves-button'\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            } else {\n");
      out.write("                deleteDialog = $.confirm({\n");
      out.write("                    type: 'red',\n");
      out.write("                    animationSpeed: 300,\n");
      out.write("                    title: false, \n");
      out.write("                    content: '确认删除该特殊项目吗？',\n");
      out.write("                 buttons: {\n");
      out.write("                        confirm: {\n");
      out.write("                            text: '确认',\n");
      out.write("                            btnClass: 'waves-effect waves-button',\n");
      out.write("                            action: function () {\n");
      out.write("                                var ids = new Array();\n");
      out.write("                                for (var i in rows) {\n");
      out.write("                                    ids.push(rows[i].id);\n");
      out.write("                                 }\n");
      out.write("                                $.ajax({\n");
      out.write("                                    type: 'get', \n");
      out.write("                                    url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/qy/basCostConfig/delete/' + ids.join(\"-\"),\n");
      out.write("                                 success: function(result) {\n");
      out.write("                                        if (result.code != 1) {\n");
      out.write("                                            if (result.data instanceof Array) {\n");
      out.write("                                                $.each(result.data, function(index, value) {\n");
      out.write("                                                    $.confirm({\n");
      out.write("                                                        theme: 'dark',\n");
      out.write("                                                        animation: 'rotateX',\n");
      out.write("                                                        closeAnimation: 'rotateX',\n");
      out.write("                                                        title: false,\n");
      out.write("                                                        content: value.errorMsg,\n");
      out.write("                                                        buttons: {\n");
      out.write("                                                            confirm: {\n");
      out.write("                                                                text: '确认',\n");
      out.write("                                                                btnClass: 'waves-effect waves-button waves-light'\n");
      out.write("                                                            }\n");
      out.write("                                                        }\n");
      out.write("                                                    });\n");
      out.write("                                                });\n");
      out.write("                                            } else {\n");
      out.write("                                                $.confirm({\n");
      out.write("                                                    theme: 'dark',\n");
      out.write("                                                    animation: 'rotateX',\n");
      out.write("                                                    closeAnimation: 'rotateX',\n");
      out.write("                                                    title: false,\n");
      out.write("                                                    content: result.data.errorMsg,\n");
      out.write("                                                    buttons: {\n");
      out.write("                                                        confirm: {\n");
      out.write("                                                            text: '确认',\n");
      out.write("                                                            btnClass: 'waves-effect waves-button waves-light'\n");
      out.write("                                                        }\n");
      out.write("                                                    }\n");
      out.write("                                                });\n");
      out.write("                                            }\n");
      out.write("                                        } else {\n");
      out.write("                                            deleteDialog.close();\n");
      out.write("                                                $table.bootstrapTable('refresh');\n");
      out.write("                                        }\n");
      out.write("                                    },\n");
      out.write("                                    error: function(XMLHttpRequest, textStatus, errorThrown) {\n");
      out.write("                                        $.confirm({\n");
      out.write("                                            theme: 'dark',\n");
      out.write("                                            animation: 'rotateX',\n");
      out.write("                                            closeAnimation: 'rotateX',\n");
      out.write("                                            title: false,\n");
      out.write("                                            content: textStatus,\n");
      out.write("                                            buttons: {\n");
      out.write("                                                confirm: {\n");
      out.write("                                                    text: '确认',\n");
      out.write("                                                    btnClass: 'waves-effect waves-button waves-light'\n");
      out.write("                                                }\n");
      out.write("                                            }\n");
      out.write("                                        });\n");
      out.write("                                    }\n");
      out.write("                                });\n");
      out.write("                            }\n");
      out.write("                        },\n");
      out.write("                        cancel: {\n");
      out.write("                            text: '取消',\n");
      out.write("                            btnClass: 'waves-effect waves-button'\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("        } else {\n");
      out.write("            deleteDialog = $.confirm({\n");
      out.write("                type: 'red',\n");
      out.write("                animationSpeed: 300,\n");
      out.write("                title: false, \n");
      out.write("                content: '确认删除该特殊项目吗？',\n");
      out.write("             buttons: {\n");
      out.write("                    confirm: {\n");
      out.write("                        text: '确认',\n");
      out.write("                        btnClass: 'waves-effect waves-button',\n");
      out.write("                        action: function () {\n");
      out.write("                            $.ajax({\n");
      out.write("                                type: 'get', \n");
      out.write("                                url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/qy/basCostConfig/delete/' + id,\n");
      out.write("                                success: function(result) {\n");
      out.write("                                    deleteDialog.close();\n");
      out.write("                                    $table.bootstrapTable('refresh');\n");
      out.write("                                },\n");
      out.write("                                error: function(XMLHttpRequest, textStatus, errorThrown) {\n");
      out.write("                                    $.confirm({\n");
      out.write("                                        theme: 'dark',\n");
      out.write("                                        animation: 'rotateX',\n");
      out.write("                                        closeAnimation: 'rotateX',\n");
      out.write("                                        title: false,\n");
      out.write("                                        content: textStatus,\n");
      out.write("                                        buttons: {\n");
      out.write("                                            confirm: {\n");
      out.write("                                                text: '确认',\n");
      out.write("                                                btnClass: 'waves-effect waves-button waves-light'\n");
      out.write("                                            }\n");
      out.write("                                        }\n");
      out.write("                                    });\n");
      out.write("                                }\n");
      out.write("                            });\n");
      out.write("                        }\n");
      out.write("                    },\n");
      out.write("                    cancel: {\n");
      out.write("                        text: '取消',\n");
      out.write("                        btnClass: 'waves-effect waves-button'\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    //日期格式化\n");
      out.write("    Date.prototype.Format = function (fmt) { //author: meizz\n");
      out.write("        var o = {\n");
      out.write("            \"M+\": this.getMonth() + 1, //月份\n");
      out.write("            \"d+\": this.getDate(), //日\n");
      out.write("            \"h+\": this.getHours(), //小时\n");
      out.write("            \"m+\": this.getMinutes(), //分\n");
      out.write("            \"s+\": this.getSeconds(), //秒\n");
      out.write("            \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n");
      out.write("            \"S\": this.getMilliseconds() //毫秒\n");
      out.write("        };\n");
      out.write("        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n");
      out.write("        for (var k in o)\n");
      out.write("            if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n");
      out.write("        return fmt;\n");
      out.write("    }\n");
      out.write("    $(function () {\n");
      out.write("        //时间\n");
      out.write("        $('#date').datetimepicker({\n");
      out.write("            language:  'zh-CN',\n");
      out.write("            format: 'yyyy-mm',\n");
      out.write("            startView: 3,\n");
      out.write("            minView: 3,\n");
      out.write("            weekStart: 1,\n");
      out.write("            autoclose:true,\n");
      out.write("            forceParse: true\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/jsp/manage/qy/basCostConfigIndex.jsp(8,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("basePath");
      // /WEB-INF/jsp/manage/qy/basCostConfigIndex.jsp(8,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
