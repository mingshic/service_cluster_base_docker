/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.47
 * Generated at: 2018-12-04 04:08:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.manage.file;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class upmsFileTypeIndex_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(9);
    _jspx_dependants.put("jar:file:/opt/www/webserver/zheng-upms-server/WEB-INF/lib/spring-webmvc-4.3.20.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1539563356000L));
    _jspx_dependants.put("jar:file:/opt/www/webserver/zheng-upms-server/WEB-INF/lib/spring-webmvc-4.3.20.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1539563356000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.3.20.RELEASE.jar", Long.valueOf(1541076044000L));
    _jspx_dependants.put("jar:file:/opt/www/webserver/zheng-upms-server/WEB-INF/lib/jstl-1.2.jar!/META-INF/c-1_0-rt.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/opt/www/webserver/zheng-upms-server/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1528799796000L));
    _jspx_dependants.put("jar:file:/opt/www/webserver/zheng-upms-server/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/opt/www/webserver/zheng-upms-server/WEB-INF/lib/shiro-web-1.3.2.jar!/META-INF/shiro.tld", Long.valueOf(1473414826000L));
    _jspx_dependants.put("/WEB-INF/lib/shiro-web-1.3.2.jar", Long.valueOf(1528799788000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("<!DOCTYPE HTML>\n");
      out.write("<html lang=\"zh-cn\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("    <title>管理</title>\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/inc/head.jsp", out, true);
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id=\"main\">\n");
      out.write("    <div id=\"toolbar\">\n");
      out.write("        ");
      if (_jspx_meth_shiro_005fhasPermission_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("        ");
      if (_jspx_meth_shiro_005fhasPermission_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("        ");
      if (_jspx_meth_shiro_005fhasPermission_005f2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    </div>\n");
      out.write("    <table id=\"table\"></table>\n");
      out.write("</div>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/inc/footer.jsp", out, true);
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    var $table = $('#table');\n");
      out.write("    $(function() {\n");
      out.write("        // bootstrap table初始化\n");
      out.write("            $table.bootstrapTable({ \n");
      out.write("            url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/file/upmsFileType/list',\n");
      out.write("         height: getHeight(),\n");
      out.write("            striped: true,\n");
      out.write("            search: true,\n");
      out.write("            showRefresh: true,\n");
      out.write("            showColumns: true,\n");
      out.write("            minimumCountColumns: 2,\n");
      out.write("            clickToSelect: true,\n");
      out.write("            detailView: true,\n");
      out.write("            detailFormatter: 'detailFormatter',\n");
      out.write("            pagination: true,\n");
      out.write("            paginationLoop: false,\n");
      out.write("            sidePagination: 'server',\n");
      out.write("            silentSort: false,\n");
      out.write("            smartDisplay: false,\n");
      out.write("            escape: true,\n");
      out.write("            searchOnEnterKey: true,\n");
      out.write("            idField: 'file_typeId',\n");
      out.write("            maintainSelected: true,\n");
      out.write("            toolbar: '#toolbar',\n");
      out.write("            columns: [\n");
      out.write("            {field: 'ck', checkbox: true},\n");
      out.write("            {field: 'fileTypeId', title: '编号', sortable: true, align: 'center'},\n");
      out.write("            {field: 'fileTypeCode', title: '类型编码'},\n");
      out.write("            {field: 'fileTypeName', title: '类型名称'},\n");
      out.write("            {field: 'title', title: '所属系统'},\n");
      out.write("            {field: 'acceptType', title: '接受文件类型'},\n");
      out.write("            {field: 'action', title: '操作', align: 'center', formatter: 'actionFormatter', events: 'actionEvents', clickToSelect: false}\n");
      out.write("            ]\n");
      out.write("            });\n");
      out.write("    });\n");
      out.write("    // 格式化操作按钮\n");
      out.write("    function actionFormatter(value, row, index) {\n");
      out.write("        return [\n");
      out.write("            '<a class=\"update\" href=\"javascript:;\" onclick=\"updateAction()\" data-toggle=\"tooltip\" title=\"Edit\"><i class=\"glyphicon glyphicon-edit\"></i></a>　',\n");
      out.write("            '<a class=\"delete\" href=\"javascript:;\" onclick=\"deleteAction()\" data-toggle=\"tooltip\" title=\"Remove\"><i class=\"glyphicon glyphicon-remove\"></i></a>'\n");
      out.write("        ].join('');\n");
      out.write("    }\n");
      out.write("    // 格式化图标\n");
      out.write("    function iconFormatter(value, row, index) {\n");
      out.write("        return '<i class=\"' + value + '\"></i>';\n");
      out.write("    }\n");
      out.write("    // 格式化类型\n");
      out.write("    function typeFormatter(value, row, index) {\n");
      out.write("        if (value == 1) {\n");
      out.write("            return '<span class=\"label label-primary\">普通</span>';\n");
      out.write("        }\n");
      out.write("        if (value == 2) {\n");
      out.write("            return '<span class=\"label label-danger\">热门</span>';\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    // 新增\n");
      out.write("    var createDialog;\n");
      out.write("    function createAction() {\n");
      out.write("        createDialog = $.dialog({\n");
      out.write("            animationSpeed: 300, \n");
      out.write("            title: '新增',\n");
      out.write("            content: 'url:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/file/upmsFileType/create',\n");
      out.write("         onContentReady: function () {\n");
      out.write("                initMaterialInput();\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("    // 编辑\n");
      out.write("    var updateDialog;\n");
      out.write("    function updateAction() {\n");
      out.write("        var rows = $table.bootstrapTable('getSelections');\n");
      out.write("        if (rows.length != 1) {\n");
      out.write("            $.confirm({\n");
      out.write("                title: false,\n");
      out.write("                content: '请选择一条记录！',\n");
      out.write("                autoClose: 'cancel|3000',\n");
      out.write("                backgroundDismiss: true,\n");
      out.write("                buttons: {\n");
      out.write("                    cancel: {\n");
      out.write("                        text: '取消',\n");
      out.write("                        btnClass: 'waves-effect waves-button'\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        } else {\n");
      out.write("            updateDialog = $.dialog({\n");
      out.write("                animationSpeed: 300, \n");
      out.write("                title: '编辑',\n");
      out.write("                content: 'url:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/file/upmsFileType/update/' + rows[0].fileTypeId,\n");
      out.write("             onContentReady: function () {\n");
      out.write("                    initMaterialInput();\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("    // 删除\n");
      out.write("    var deleteDialog;\n");
      out.write("    function deleteAction() {\n");
      out.write("        var rows = $table.bootstrapTable('getSelections');\n");
      out.write("        if (rows.length == 0) {\n");
      out.write("            $.confirm({\n");
      out.write("                title: false,\n");
      out.write("                content: '请至少选择一条记录！',\n");
      out.write("                autoClose: 'cancel|3000',\n");
      out.write("                backgroundDismiss: true,\n");
      out.write("                buttons: {\n");
      out.write("                    cancel: {\n");
      out.write("                        text: '取消',\n");
      out.write("                        btnClass: 'waves-effect waves-button'\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        } else {\n");
      out.write("            deleteDialog = $.confirm({\n");
      out.write("                type: 'red',\n");
      out.write("                animationSpeed: 300,\n");
      out.write("                title: false, \n");
      out.write("                content: '确认删除该吗？',\n");
      out.write("             buttons: {\n");
      out.write("                    confirm: {\n");
      out.write("                        text: '确认',\n");
      out.write("                        btnClass: 'waves-effect waves-button',\n");
      out.write("                        action: function () {\n");
      out.write("                            var ids = new Array();\n");
      out.write("                            for (var i in rows) {\n");
      out.write("                                ids.push(rows[i].fileTypeId);\n");
      out.write("                            }\n");
      out.write("                            $.ajax({\n");
      out.write("                                type: 'get', \n");
      out.write("                                url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${basePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/file/upmsFileType/delete/' + ids.join(\"-\"),\n");
      out.write("                             success: function(result) {\n");
      out.write("                                    if (result.code != 1) {\n");
      out.write("                                        if (result.data instanceof Array) {\n");
      out.write("                                            $.each(result.data, function(index, value) {\n");
      out.write("                                                $.confirm({\n");
      out.write("                                                    theme: 'dark',\n");
      out.write("                                                    animation: 'rotateX',\n");
      out.write("                                                    closeAnimation: 'rotateX',\n");
      out.write("                                                    title: false,\n");
      out.write("                                                    content: value.errorMsg,\n");
      out.write("                                                    buttons: {\n");
      out.write("                                                        confirm: {\n");
      out.write("                                                            text: '确认',\n");
      out.write("                                                            btnClass: 'waves-effect waves-button waves-light'\n");
      out.write("                                                        }\n");
      out.write("                                                    }\n");
      out.write("                                                });\n");
      out.write("                                            });\n");
      out.write("                                        } else {\n");
      out.write("                                            $.confirm({\n");
      out.write("                                                theme: 'dark',\n");
      out.write("                                                animation: 'rotateX',\n");
      out.write("                                                closeAnimation: 'rotateX',\n");
      out.write("                                                title: false,\n");
      out.write("                                                content: result.data.errorMsg,\n");
      out.write("                                                buttons: {\n");
      out.write("                                                    confirm: {\n");
      out.write("                                                        text: '确认',\n");
      out.write("                                                        btnClass: 'waves-effect waves-button waves-light'\n");
      out.write("                                                    }\n");
      out.write("                                                }\n");
      out.write("                                            });\n");
      out.write("                                        }\n");
      out.write("                                    } else {\n");
      out.write("                                        deleteDialog.close();\n");
      out.write("                                            $table.bootstrapTable('refresh');\n");
      out.write("                                    }\n");
      out.write("                                },\n");
      out.write("                                error: function(XMLHttpRequest, textStatus, errorThrown) {\n");
      out.write("                                    $.confirm({\n");
      out.write("                                        theme: 'dark',\n");
      out.write("                                        animation: 'rotateX',\n");
      out.write("                                        closeAnimation: 'rotateX',\n");
      out.write("                                        title: false,\n");
      out.write("                                        content: textStatus,\n");
      out.write("                                        buttons: {\n");
      out.write("                                            confirm: {\n");
      out.write("                                                text: '确认',\n");
      out.write("                                                btnClass: 'waves-effect waves-button waves-light'\n");
      out.write("                                            }\n");
      out.write("                                        }\n");
      out.write("                                    });\n");
      out.write("                                }\n");
      out.write("                            });\n");
      out.write("                        }\n");
      out.write("                    },\n");
      out.write("                    cancel: {\n");
      out.write("                        text: '取消',\n");
      out.write("                        btnClass: 'waves-effect waves-button'\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/jsp/manage/file/upmsFileTypeIndex.jsp(8,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("basePath");
      // /WEB-INF/jsp/manage/file/upmsFileTypeIndex.jsp(8,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f0 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    boolean _jspx_th_shiro_005fhasPermission_005f0_reused = false;
    try {
      _jspx_th_shiro_005fhasPermission_005f0.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005fhasPermission_005f0.setParent(null);
      // /WEB-INF/jsp/manage/file/upmsFileTypeIndex.jsp(21,8) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005fhasPermission_005f0.setName("wbm:upmsFileType:create");
      int _jspx_eval_shiro_005fhasPermission_005f0 = _jspx_th_shiro_005fhasPermission_005f0.doStartTag();
      if (_jspx_eval_shiro_005fhasPermission_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<a class=\"waves-effect waves-button\" href=\"javascript:;\" onclick=\"createAction()\"><i class=\"zmdi zmdi-plus\"></i> 新增文件类型</a>");
          int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005fhasPermission_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f0);
      _jspx_th_shiro_005fhasPermission_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005fhasPermission_005f0, _jsp_getInstanceManager(), _jspx_th_shiro_005fhasPermission_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f1 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    boolean _jspx_th_shiro_005fhasPermission_005f1_reused = false;
    try {
      _jspx_th_shiro_005fhasPermission_005f1.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005fhasPermission_005f1.setParent(null);
      // /WEB-INF/jsp/manage/file/upmsFileTypeIndex.jsp(22,8) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005fhasPermission_005f1.setName("wbm:upmsFileType:update");
      int _jspx_eval_shiro_005fhasPermission_005f1 = _jspx_th_shiro_005fhasPermission_005f1.doStartTag();
      if (_jspx_eval_shiro_005fhasPermission_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<a class=\"waves-effect waves-button\" href=\"javascript:;\" onclick=\"updateAction()\"><i class=\"zmdi zmdi-edit\"></i> 编辑文件类型</a>");
          int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005fhasPermission_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f1);
      _jspx_th_shiro_005fhasPermission_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005fhasPermission_005f1, _jsp_getInstanceManager(), _jspx_th_shiro_005fhasPermission_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f2 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    boolean _jspx_th_shiro_005fhasPermission_005f2_reused = false;
    try {
      _jspx_th_shiro_005fhasPermission_005f2.setPageContext(_jspx_page_context);
      _jspx_th_shiro_005fhasPermission_005f2.setParent(null);
      // /WEB-INF/jsp/manage/file/upmsFileTypeIndex.jsp(23,8) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_shiro_005fhasPermission_005f2.setName("wbm:upmsFileType:delete");
      int _jspx_eval_shiro_005fhasPermission_005f2 = _jspx_th_shiro_005fhasPermission_005f2.doStartTag();
      if (_jspx_eval_shiro_005fhasPermission_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<a class=\"waves-effect waves-button\" href=\"javascript:;\" onclick=\"deleteAction()\"><i class=\"zmdi zmdi-close\"></i> 删除文件类型</a>");
          int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_shiro_005fhasPermission_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f2);
      _jspx_th_shiro_005fhasPermission_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_shiro_005fhasPermission_005f2, _jsp_getInstanceManager(), _jspx_th_shiro_005fhasPermission_005f2_reused);
    }
    return false;
  }
}
